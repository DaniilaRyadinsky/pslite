#pragma checksum "C:\Users\dikij\Документы\study fuck\сцои\pslite\Curvies.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "B6D9B8E3FAFF7DBFE0BAD3E3DAB6BBEEF5E6A81CE1E6253348ECA529E542DBD0"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImageLinker2
{
    partial class Curvies : 
        global::Microsoft.UI.Xaml.Controls.UserControl, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_UIElement_Visibility(global::Microsoft.UI.Xaml.UIElement obj, global::Microsoft.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Image_Source(global::Microsoft.UI.Xaml.Controls.Image obj, global::Microsoft.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Media.ImageSource) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private partial class Curvies_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            ICurvies_Bindings
        {
            private global::ImageLinker2.Curvies dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.RelativePanel obj2;
            private global::Microsoft.UI.Xaml.Controls.Canvas obj3;
            private global::Microsoft.UI.Xaml.Controls.Image obj4;

            // Fields for each event bindings event handler.
            private global::Microsoft.UI.Xaml.Input.PointerEventHandler obj3PointerPressed;
            private global::Microsoft.UI.Xaml.Input.PointerEventHandler obj3PointerMoved;
            private global::Microsoft.UI.Xaml.Input.PointerEventHandler obj3PointerReleased;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2VisibilityDisabled = false;
            private static bool isobj4SourceDisabled = false;

            private Curvies_obj1_BindingsTracking bindingsTracking;

            public Curvies_obj1_Bindings()
            {
                this.bindingsTracking = new Curvies_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 12 && columnNumber == 20)
                {
                    isobj2VisibilityDisabled = true;
                }
                else if (lineNumber == 20 && columnNumber == 21)
                {
                    this.obj3.PointerPressed -= obj3PointerPressed;
                }
                else if (lineNumber == 21 && columnNumber == 21)
                {
                    this.obj3.PointerMoved -= obj3PointerMoved;
                }
                else if (lineNumber == 22 && columnNumber == 21)
                {
                    this.obj3.PointerReleased -= obj3PointerReleased;
                }
                else if (lineNumber == 15 && columnNumber == 58)
                {
                    isobj4SourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Curvies.xaml line 12
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.RelativePanel>(target);
                        break;
                    case 3: // Curvies.xaml line 19
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Canvas>(target);
                        this.obj3PointerPressed = (global::System.Object p0, global::Microsoft.UI.Xaml.Input.PointerRoutedEventArgs p1) =>
                        {
                            if (this.dataRoot != null)
                            {
                                if (this.dataRoot.ViewModel != null)
                                {
                                    this.dataRoot.ViewModel.Canvas_PointerPressed(p0, p1);
                                }
                            }
                        };
                        (global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Canvas>(target)).PointerPressed += obj3PointerPressed;
                        this.obj3PointerMoved = (global::System.Object p0, global::Microsoft.UI.Xaml.Input.PointerRoutedEventArgs p1) =>
                        {
                            if (this.dataRoot != null)
                            {
                                if (this.dataRoot.ViewModel != null)
                                {
                                    this.dataRoot.ViewModel.Canvas_PointerMoved(p0, p1);
                                }
                            }
                        };
                        (global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Canvas>(target)).PointerMoved += obj3PointerMoved;
                        this.obj3PointerReleased = (global::System.Object p0, global::Microsoft.UI.Xaml.Input.PointerRoutedEventArgs p1) =>
                        {
                            if (this.dataRoot != null)
                            {
                                if (this.dataRoot.ViewModel != null)
                                {
                                    this.dataRoot.ViewModel.Canvas_PointerReleased(p0, p1);
                                }
                            }
                        };
                        (global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Canvas>(target)).PointerReleased += obj3PointerReleased;
                        break;
                    case 4: // Curvies.xaml line 15
                        this.obj4 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ICurvies_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::ImageLinker2.Curvies>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::ImageLinker2.Curvies obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::ImageLinker2.ViewModel.CurviesViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Visibility(obj.Visibility, phase);
                        this.Update_ViewModel_HistogramSource(obj.HistogramSource, phase);
                    }
                }
            }
            private void Update_ViewModel_Visibility(global::Microsoft.UI.Xaml.Visibility obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Curvies.xaml line 12
                    if (!isobj2VisibilityDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_UIElement_Visibility(this.obj2, obj);
                    }
                }
            }
            private void Update_ViewModel_HistogramSource(global::Microsoft.UI.Xaml.Media.Imaging.WriteableBitmap obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Curvies.xaml line 15
                    if (!isobj4SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Image_Source(this.obj4, obj, null);
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class Curvies_obj1_BindingsTracking
            {
                private global::System.WeakReference<Curvies_obj1_Bindings> weakRefToBindingObj; 

                public Curvies_obj1_BindingsTracking(Curvies_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<Curvies_obj1_Bindings>(obj);
                }

                public Curvies_obj1_Bindings TryGetBindingObject()
                {
                    Curvies_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_ViewModel(null);
                }

                public void DependencyPropertyChanged_ViewModel(global::Microsoft.UI.Xaml.DependencyObject sender, global::Microsoft.UI.Xaml.DependencyProperty prop)
                {
                    Curvies_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::ImageLinker2.Curvies obj = sender as global::ImageLinker2.Curvies;
                        if (obj != null)
                        {
                            bindings.Update_ViewModel(obj.ViewModel, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_ViewModel = 0;
                public void UpdateChildListeners_(global::ImageLinker2.Curvies obj)
                {
                    Curvies_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::ImageLinker2.Curvies.ViewModelProperty, tokenDPC_ViewModel);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_ViewModel = obj.RegisterPropertyChangedCallback(global::ImageLinker2.Curvies.ViewModelProperty, DependencyPropertyChanged_ViewModel);
                        }
                    }
                }
                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    Curvies_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::ImageLinker2.ViewModel.CurviesViewModel obj = sender as global::ImageLinker2.ViewModel.CurviesViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Visibility(obj.Visibility, DATA_CHANGED);
                                bindings.Update_ViewModel_HistogramSource(obj.HistogramSource, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Visibility":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Visibility(obj.Visibility, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "HistogramSource":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_HistogramSource(obj.HistogramSource, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::ImageLinker2.ViewModel.CurviesViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::ImageLinker2.ViewModel.CurviesViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Curvies.xaml line 2
                {
                    this.root = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.UserControl>(target);
                }
                break;
            case 3: // Curvies.xaml line 19
                {
                    this.CurveView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Canvas>(target);
                }
                break;
            case 4: // Curvies.xaml line 15
                {
                    this.Thumbnail = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }


        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2503")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Curvies.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Controls.UserControl element1 = (global::Microsoft.UI.Xaml.Controls.UserControl)target;
                    Curvies_obj1_Bindings bindings = new Curvies_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

